name: Full CI/CD Pipeline

on:
  push:
    branches:
      - '**'          # Sur toutes les branches
  pull_request:
    branches:
      - main          # Sur les PR vers main
  repository_dispatch:
    types: [cms-content-updated]   # D√©clench√© via webhook (CMS)
  schedule:
    - cron: '0 0 * * *'            # √Ä minuit tous les jours (d√©sactiver apr√®s test)

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      # 1Ô∏è‚É£ R√©cup√®re le code du repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Installe Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # 3Ô∏è‚É£ Installe les d√©pendances
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ V√©rifie le formatage avec Prettier
      - name: Run Prettier
        run: npm run prettier --if-present

      # 5Ô∏è‚É£ Lance les tests Jest
      - name: Run Jest tests
        run: npm test -- --coverage

      # 6Ô∏è‚É£ Build du projet avec variables Contentful
      - name: Build project
        run: npm run build
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: ${{ secrets.CONTENTFUL_ENVIRONMENT }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.event_name == 'repository_dispatch' || github.event_name == 'schedule'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      # üß© D√©ploiement Netlify avec les m√™mes variables Contentful
      - name: Deploy to Netlify
        run: npx netlify-cli deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: ${{ secrets.CONTENTFUL_ENVIRONMENT }}
